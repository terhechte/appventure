[frontMatter]
title = "Advanced Pattern Matching"
keywords = ["feature", "lisp", "swift", "optional", "scala", "simple", "optionals", "switch", "chaining", "for", "pattern", "matching", "clojure", "haskell"]
tags = []
created = "2015-08-20"
description = "In this post, we'll have a look at Pattern Matching in Swift in terms of the 'switch', 'for', 'if', and 'guard' keywords. We'll have a look at the basic syntax and at best practices and helpful examples."
published = true

[meta]
featured = "true"
swift_version = "5.1"
short_title = "ðŸ§© Pattern Matching"
short_code = "<pre class='Swift'><code><span class='apvsource swift'><span class='apvkeyword apvcontrol apvswitch swift'>case</span> (<span class='apvkeyword apvoperator apvtype-casting swift'>is</span> <span class='apvsupport apvtype swift'>Bool</span>, <span class='apvstorage apvtype swift'>let</span> x <span class='apvkeyword apvoperator apvtype-casting swift'>as</span> <span class='apvsupport apvtype swift'>Int</span>)<br/>&nbsp;&nbsp;&nbsp;&nbsp; <span class='apvkeyword apvcontrol apvswitch swift'>where</span> x <span class='apvkeyword apvoperator apvcomparative swift'>&gt;</span> <span class='apvconstant apvnumeric apvinteger apvdecimal swift'>10</span> </span></code></pre></code></pre>"
---
- [Intro](intro.md)
- [A Trading Engine](trading_engine.md)
- [Pattern Types](advanced_pattern_matching/pattern_types.md)
  - [Wildcard Pattern](advanced_pattern_matching/wildcard_pattern.md)
  - [Identifier Pattern](advanced_pattern_matching/identifier_pattern.md)
  - [Value-Binding Pattern](advanced_pattern_matching/value_binding_pattern.md)
  - [Tuple Pattern](advanced_pattern_matching/tuple_pattern.md)
  - [Enumeration Case Pattern](advanced_pattern_matching/enumeration_case_pattern.md)
  - [Type Casting Pattern](advanced_pattern_matching/type_casting_pattern.md)
  - [Expression Pattern](advanced_pattern_matching/expressionpattern.md)
- [Fallthrough, Break and Labels](fallthrough_break_labels.md)
- [Real World Examples](real_world_examples/intro.md)
  - [Optionals](real_world_examples/optionals.md)
  - [Type Matches](real_world_examples/type_matches.md)
  - [Applying ranges for grading](real_world_examples/applying_ranges.md)
  - [Word Frequencies](real_world_examples/word_frequencies.md)
  - [Directory Traversion](real_world_examples/directory_traversion.md)
  - [Fibonacci](real_world_examples/fibonacci.md)
  - [Legacy API](real_world_examples/legacy_api.md)
- [Language Support](language_support/intro.md)
  - [For Case](language_support/for_case.md)
  - [Guard Case](language_support/guard_case.md)
  - [If Case](language_support/if_case.md)
- [Finishing Words](finishing_words.md)
